name: "Release"

on:
  release:
    types: [published]

jobs:
  update_env:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      RELEASE_VERSION: "${{ github.event.release.tag_name }}"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update .env
        run: sed -i "s/IMAGE_VERSION=.*/IMAGE_VERSION=${RELEASE_VERSION}/" .env

      - name: Commit updated .env file
        uses: test-room-7/action-update-file@v1
        with:
          file-path: ./.env
          commit-msg: "Update .env file with release version"
          branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build_and_push_images:
    needs: update_env
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      RELEASE_VERSION: "${{ github.event.release.tag_name }}"
      DOCKERHUB_REPO: "otel/demo"
      GHCR_REPO: "ghcr.io/open-telemetry/demo"

    strategy:
      matrix:
        file_tag:
          - file: ./src/adservice/Dockerfile
            tag_suffix: adservice
          - file: ./src/cartservice/src/Dockerfile
            tag_suffix: cartservice
          - file: ./src/checkoutservice/Dockerfile
            tag_suffix: checkoutservice
          - file: ./src/currencyservice/Dockerfile
            tag_suffix: currencyservice
          - file: ./src/emailservice/Dockerfile
            tag_suffix: emailservice
          - file: ./src/frontend/Dockerfile
            tag_suffix: frontend
          - file: ./src/paymentservice/Dockerfile
            tag_suffix: paymentservice
          - file: ./src/productcatalogservice/Dockerfile
            tag_suffix: productcatalogservice
          - file: ./src/quoteservice/Dockerfile
            tag_suffix: quoteservice
          - file: ./src/shippingservice/Dockerfile
            tag_suffix: shippingservice
          - file: ./src/featureflagservice/Dockerfile
            tag_suffix: featureflagservice
          - file: ./src/loadgenerator/Dockerfile
            tag_suffix: loadgenerator
          - file: ./src/recommendationservice/Dockerfile
            tag_suffix: recommendationservice
          - file: ./src/frontend/Dockerfile.cypress
            tag_suffix: frontend-tests
          - file: ./test/Dockerfile
            tag_suffix: integrationTests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # limit docker push image concurrency to 1
      # to avoid github package return 429 ratelimit error
      - name: Set docker upload concurrent
        run: |
          echo $'{"max-concurrent-uploads": 1}' | sudo dd status=none of=/etc/docker/daemon.json
          sudo service docker restart

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Matrix Build and push demo images
        uses: docker/build-push-action@v3.1.1
        with:
          context: ./
          file: ${{ matrix.file_tag.file }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.RELEASE_VERSION }}-${{ matrix.file_tag.tag_suffix }},${{ env.GHCR_REPO }}:${{ env.RELEASE_VERSION }}-${{ matrix.file_tag.tag_suffix }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
